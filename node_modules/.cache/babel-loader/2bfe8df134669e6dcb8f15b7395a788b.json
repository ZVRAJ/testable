{"ast":null,"code":"import _defineProperty from \"/Users/ZVR/OneDrive/SITE_CHAMPION/testable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ZVR/OneDrive/SITE_CHAMPION/testable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/ZVR/OneDrive/SITE_CHAMPION/testable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/ZVR/OneDrive/SITE_CHAMPION/testable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ZVR/OneDrive/SITE_CHAMPION/testable/src/filterElement.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Checkbox, FormControl, FormGroup, FormControlLabel } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      margin: theme.spacing(3),\n      display: \"block\"\n    }\n  };\n});\n\nvar filterData = function filterData(keyword, data) {\n  return data.filter(function (data) {\n    return String(data).indexOf(keyword) > -1;\n  });\n};\n\nexport default function FilterElement(props) {\n  var _this = this;\n\n  var classes = useStyles(); //const [keyword, setKeyword] = React.useState(\"\");\n\n  var _props$stateCheckedIt = _slicedToArray(props.stateCheckedItems, 2),\n      checkedItems = _props$stateCheckedIt[0],\n      setCheckedItems = _props$stateCheckedIt[1];\n\n  var _props$stateKeywords = _slicedToArray(props.stateKeywords, 2),\n      keywords = _props$stateKeywords[0],\n      setKeywords = _props$stateKeywords[1];\n\n  var data = props.data;\n  var columnName = props.columnName;\n  var filteredData = keywords[columnName] === \"\" ? data : filterData(keywords[columnName], data);\n\n  var handleCheck = function handleCheck(item, propName) {\n    var targetProperty = _toConsumableArray(checkedItems[propName]);\n\n    var wasChecked = targetProperty.indexOf(item) > -1;\n    var newCheckedArray = wasChecked ? targetProperty.filter(function (element) {\n      return element !== item;\n    }) : [].concat(_toConsumableArray(targetProperty), [item]);\n    setCheckedItems(_objectSpread(_objectSpread({}, checkedItems), {}, _defineProperty({}, propName, newCheckedArray)));\n  };\n\n  var handleInput = function handleInput(event) {\n    setKeywords(_objectSpread(_objectSpread({}, keywords), {}, _defineProperty({}, columnName, event.target.value)));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: function onChange(event) {\n      return handleInput(event);\n    },\n    value: keywords[columnName],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, filteredData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: index,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checkedItems[columnName].indexOf(item) > -1,\n        onChange: function onChange() {\n          return handleCheck(item, columnName);\n        },\n        name: item,\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }),\n      label: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["/Users/ZVR/OneDrive/SITE_CHAMPION/testable/src/filterElement.jsx"],"names":["React","makeStyles","TextField","Checkbox","FormControl","FormGroup","FormControlLabel","useStyles","theme","formControl","margin","spacing","display","filterData","keyword","data","filter","String","indexOf","FilterElement","props","classes","stateCheckedItems","checkedItems","setCheckedItems","stateKeywords","keywords","setKeywords","columnName","filteredData","handleCheck","item","propName","targetProperty","wasChecked","newCheckedArray","element","handleInput","event","target","value","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Checkbox,\n  FormControl,\n  FormGroup,\n  FormControlLabel\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n    display: \"block\"\n  }\n}));\n\nconst filterData = (keyword, data) => {\n  return data.filter(data => {\n    return String(data).indexOf(keyword) > -1;\n  });\n};\n\nexport default function FilterElement(props) {\n  const classes = useStyles();\n  //const [keyword, setKeyword] = React.useState(\"\");\n  const [checkedItems, setCheckedItems] = props.stateCheckedItems;\n  const [keywords, setKeywords] = props.stateKeywords;\n  const data = props.data;\n  const columnName = props.columnName;\n\n  const filteredData =\n    keywords[columnName] === \"\" ? data : filterData(keywords[columnName], data);\n\n  const handleCheck = (item, propName) => {\n    const targetProperty = [...checkedItems[propName]];\n    const wasChecked = targetProperty.indexOf(item) > -1;\n    const newCheckedArray = wasChecked\n      ? targetProperty.filter(element => element !== item)\n      : [...targetProperty, item];\n    setCheckedItems({ ...checkedItems, [propName]: newCheckedArray });\n  };\n\n  const handleInput = event => {\n    setKeywords({ ...keywords, [columnName]: event.target.value });\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"\"\n        variant=\"outlined\"\n        size=\"small\"\n        onChange={event => handleInput(event)}\n        value={keywords[columnName]}\n      />\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormGroup>\n          {filteredData.map((item, index) => {\n            return (\n              <FormControlLabel\n                key={index}\n                control={\n                  <Checkbox\n                    checked={checkedItems[columnName].indexOf(item) > -1}\n                    onChange={() => handleCheck(item, columnName)}\n                    name={item}\n                    color=\"primary\"\n                  />\n                }\n                label={item}\n              />\n            );\n          })}\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}